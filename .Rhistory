par(op)
op <- par(mar = c(0,0,2,1),mfrow=c(1,2))
plot(Bali,usearrows=T,vertex.cex=bet,main="Raw")
plot(Bali,usearrows=FALSE,vertex.cex=sqrt(bet+1),main="Adjusted")
rescale <- function(nchar,low,high) {
min_d <- min(nchar)
max_d <- max(nchar)
rscl <- ((high-low)*(nchar-min_d))/(max_d-min_d)+low rscl
}
rscl <- ((high-low)*(nchar-min_d))/(max_d-min_d)+low rscl}
rscl}
rescale <- function(nchar,low,high) {
min_d <- min(nchar)
max_d <- max(nchar)
rscl <- ((high-low)*(nchar-min_d))/(max_d-min_d)+low
rscl}
rescale <- function(nchar,low,high) {
min_d <- min(nchar)
max_d <- max(nchar)
rscl <- ((high-low)*(nchar-min_d))/(max_d-min_d)+low
rscl}
plot(Bali,vertex.cex=rescale(deg,1,6),
main="Adjusted node sizes with rescale function.")
get.vertex.attribute(Bali,"vertex.names")
get.vertex.attribute(iBali,"vertex.names")
op <- par(mar = c(0,0,0,0)) plot(Bali,displaylabels=TRUE,label.cex=0.8,
pad=0.4,label.col="darkblue") par(op)
get.vertex.attribute(iBali,"vertex.names")
op <- par(mar = c(0,0,0,0)) plot(Bali,displaylabels=TRUE,label.cex=0.8,
pad=0.4,label.col="darkblue") par(op)
op <- par(mar = c(0,0,0,0)) plot(Bali,displaylabels=TRUE,label.cex=0.8,
pad=0.4,label.col="darkblue")
par(op)
get.vertex.attribute(iBali,"vertex.names")
op <- par(mar = c(0,0,0,0))
plot(Bali,displaylabels=TRUE,label.cex=0.8,
pad=0.4,label.col="darkblue")
par(op)
rolelab <- get.vertex.attribute(Bali,"role")
plot(Bali,usearrows=FALSE,label=rolelab,displaylabels=T,label.col="darkblue")
rolelab <- get.vertex.attribute(iBali,"role")
get.vertex.attribute(iBali,"vertex.names")
op <- par(mar = c(0,0,0,0))
plot(Bali,displaylabels=TRUE,label.cex=0.8,
pad=0.4,label.col="darkblue")
par(op)
rolelab <- get.vertex.attribute(iBali,"role")
rolelab
plot(Bali,usearrows=FALSE,label=rolelab,displaylabels=T,label.col="darkblue")
#Edge Width
op <- par(mar = c(0,0,0,0))
IClevel <- Bali %e% "IC"
plot(Bali,vertex.cex=1.5,
edge.lwd=1.5*IClevel) par(op)
#Edge Width
op <- par(mar = c(0,0,0,0))
IClevel <- Bali %e% "IC"
plot(Bali,vertex.cex=1.5,edge.lwd=1.5*IClevel) par(op)
#Edge Width
op <- par(mar = c(0,0,0,0))
IClevel <- Bali %e% "IC"
plot(Bali,vertex.cex=1.5,edge.lwd=1.5*IClevel)
par(op)
IClevel
#Edge Color
n_edge <- network.edgecount(Bali)
edge_cat <- sample(1:3,n_edge,replace=T)
linecol_pal <- c("blue","red","green")
plot(Bali,vertex.cex=1.5,vertex.col="grey25",
edge.col=linecol_pal[edge_cat],edge.lwd=2)
n_edge
my_pal <- brewer.pal(5,"Dark2")
rolecat <- as.factor(get.vertex.attribute(Bali,"role"))
rolecat <- as.factor(get.vertex.attribute(iBali,"role"))
plot(Bali,vertex.cex=rescale(deg,1,5),
vertex.col=my_pal[rolecat])
legend("bottomleft",legend=c("BM","CT","OA","SB","TL"),
col=my_pal,pch=19,pt.cex=1.5,bty="n", title="Terrorist Role")
get.vertex.attribute(iBali,"vertex.names")
op <- par(mar = c(0,0,0,0))
plot(Bali,displaylabels=TRUE,label.cex=0.8,
pad=0.4,label.col="darkblue")
#Legends
my_pal <- brewer.pal(5,"Dark2")
rolecat <- as.factor(get.vertex.attribute(iBali,"role"))
plot(Bali,vertex.cex=rescale(deg,1,5),
vertex.col=my_pal[rolecat])
legend("bottomleft",legend=c("BM","CT","OA","SB","TL"),
col=my_pal,pch=19,pt.cex=1.5,bty="n", title="Terrorist Role")
legend("bottomleft",legend=c("BM","CT","OA","SB","TL"),
col=my_pal,pch=19,pt.cex=1.5,bty="n", title="Terrorist Role")
#Legends
my_pal <- brewer.pal(5,"Dark2")
rolecat <- as.factor(get.vertex.attribute(iBali,"role"))
plot(Bali,vertex.cex=rescale(deg,1,5),
vertex.col=my_pal[rolecat])
legend("bottomleft",legend=c("BM","CT","OA","SB","TL"),
col=my_pal,pch=19,pt.cex=1.5,bty="n", title="Terrorist Role")
#Description and Analysis
#Three Common Measures of Centrality
net <- network(net_mat)
#Description and Analysis
#Three Common Measures of Centrality
net <- network(net_mat)
net_mat
#Description and Analysis
#Three Common Measures of Centrality
data(DHHS)
df.prom <- data.frame(
deg = degree(DHHS),
cls = closeness(DHHS), btw = betweenness(DHHS), evc = evcent(DHHS),
inf = infocent(DHHS), flb = flowbet(DHHS)
)
df.prom <- data.frame(deg = degree(DHHS),
cls = closeness(DHHS), btw = betweenness(DHHS),
evc = evcent(DHHS),
inf = infocent(DHHS), flb = flowbet(DHHS))
df.prom <- data.frame(deg = degree(DHHS),
cls = closeness(DHHS),
btw = betweenness(DHHS),
evc = evcent(DHHS),
inf = infocent(DHHS),
flb = flowbet(DHHS))
#Description and Analysis
#Three Common Measures of Centrality
data(DHHS)
DHHS
df.prom <- data.frame(deg = degree(DHHS),
cls = closeness(DHHS),
btw = betweenness(DHHS),
evc = evcent(DHHS),
inf = infocent(DHHS),
flb = flowbet(DHHS))
df.prom <- data.frame(deg = degree(DHHS),
cls = closeness(DHHS),
btw = betweenness(DHHS),
evc = evcent(DHHS),
inf = infocent(DHHS),
flb = flowbet(DHHS))
#Description and Analysis
#Three Common Measures of Centrality
data(DHHS)
DHHS
df.prom <- data.frame(deg = degree(DHHS),
cls = closeness(DHHS),
btw = betweenness(DHHS),
evc = evcent(DHHS),
inf = infocent(DHHS),
flb = flowbet(DHHS))
iDHHS<-asIgraph(DHHS)
df.prom <- data.frame(deg = degree(iDHHS),
cls = closeness(iDHHS),
btw = betweenness(iDHHS),
evc = evcent(iDHHS),
inf = infocent(iDHHS),
flb = flowbet(iDHHS))
#Description and Analysis
#Three Common Measures of Centrality
data(DHHS)
DHHS
iDHHS<-asIgraph(DHHS)
df.prom <- data.frame(deg = degree(iDHHS),
cls = closeness(iDHHS),
btw = betweenness(iDHHS),
evc = evcent(iDHHS),
inf = infocent(iDHHS),
flb = flowbet(iDHHS))
df.prom <- data.frame(deg = degree(DHHS),
cls = closeness(DHHS),
btw = betweenness(DHHS),
evc = evcent(DHHS),
inf = infocent(DHHS),
flb = flowbet(DHHS))
dum1 <- rbind(c(1,2),c(1,3),c(1,4),c(1,5))
star_net <- network(dum1,directed=FALSE)
circle_net <- network(dum2,directed=FALSE)
dum1 <- rbind(c(1,2),c(1,3),c(1,4),c(1,5))
star_net <- network(dum1,directed=FALSE)
dum2 <- rbind(c(1,2),c(2,3),c(3,4),c(4,5),c(5,1))
circle_net <- network(dum2,directed=FALSE)
par(mar=c(4,4,.1,.1))
my_pal <- brewer.pal(5,"Set2")
gplot(star_net,usearrows=FALSE,displaylabels=FALSE,
vertex.cex=2,
vertex.col=my_pal[1], edge.lwd=0,edge.col="grey50",xlab="Star Graph")
gplot(circle_net,usearrows=FALSE,displaylabels=FALSE, vertex.cex=2,
vertex.col=my_pal[3], edge.lwd=0,edge.col="grey50",xlab="Circle Graph")
closeness(circle_net)
## [1] 0.667 0.667 0.667 0.667 0.667
centralization(circle_net,closeness) ## [1] 0
closeness(star_net)
## [1] 1.000 0.571 0.571 0.571 0.571
centralization(star_net,closeness)
circle_net <- network(dum2,directed=FALSE)
closeness(asIgraph(circle_net))
data(Bali)
str(degree(Bali))
str(degree(asIgraph(Bali))
str(degree(asIgraph(Bali)))
str(degree(asIgraph(Bali)))
summary(degree(Bali))
data(Bali)
str(degree(asIgraph(Bali)))
summary(degree(asIgraph(Bali))
data(Bali)
my_pal <- brewer.pal(5,"Set2")
data(Bali)
rolecat <- Bali %v% "role"
gplot(Bali,usearrows=FALSE,displaylabels=TRUE,
vertex.col=my_pal[as.factor(rolecat)], edge.lwd=0,edge.col="grey25")
legend("topright",legend=c("BM","CT","OA","SB", "TL"),col=my_pal,pch=19,pt.cex=2)
data(Bali)
df.prom2 <- data.frame(
degree = degree(Bali), closeness = closeness(Bali), betweenness = betweenness(Bali) )
degree = degree(asIgraph(Bali), closeness = closeness(asIgraph(Bali), betweenness = betweenness(asIgraph(Bali) )
df.prom2 <- data.frame(degree = degree(asIgraph(Bali), closeness = closeness(asIgraph(Bali), betweenness = betweenness(asIgraph(Bali) )
data(Bali)
df.prom2 <- data.frame(degree = degree(asIgraph(Bali), closeness = closeness(asIgraph(Bali), betweenness = betweenness(asIgraph(Bali) )
df.promsort <- df.prom2[order(-df.prom2$degree),]
data(Bali)
df.prom2 <- data.frame
(degree = degree(asIgraph(Bali),
closeness = closeness(asIgraph(Bali),
betweenness = betweenness(asIgraph(Bali)))))
data(Bali)
df.prom2 <- data.frame(degree = degree(asIgraph(Bali),
closeness = closeness(asIgraph(Bali),
betweenness = betweenness(asIgraph(Bali)))))
data(Bali)
df.prom2 <- data.frame(
degree = degree(Bali),
closeness = closeness(Bali),
betweenness = betweenness(Bali) )
df.prom2 <- data.frame(
degree = degree(iBali),
closeness = closeness(iBali),
betweenness = betweenness(iBali) )
data(Bali)
library(igraph)
library(intergraph)
iBali <- asIgraph(Bali)
df.prom2 <- data.frame(
degree = degree(iBali),
closeness = closeness(iBali),
betweenness = betweenness(iBali) )
row.names(df.prom2) <- Bali %v% "vertex.names"
df.promsort <- df.prom2[order(-df.prom2$degree),]
cd <- centralization(Bali,degree)
cc <- centralization(Bali,closeness)
cb <- centralization(Bali,betweenness)
df.promsort <- df.prom2[order(-df.prom2$degree),]
cd <- centralization(iBali,degree)
cc <- centralization(iBali,closeness)
library(igraph)
library(intergraph)
iBali <- asIgraph(Bali)
op <- par(mar=c(0,0,3,0),mfrow=c(1,3))
plot(iBali,layout=layout_in_circle,
main="Circle")
plot(iBali,layout=layout_randomly,
main="Random")
plot(iBali,layout=layout_randomly,
main="Kamada-Kawai")
par(op)
library(igraph)
clqexmp <- graph.formula(A:B:C:D--A:B:C:D,D-E,E-F-G-E)
clqexmp <- graph.formula(A:B:C:D--A:B:C:D,D-E,E-F-G-E)
clqexmp
clique.number(clqexmp)
cliques(clqexmp, min=3)
maximal.cliques(clqexmp,min=3)
largest.cliques(clqexmp)
clqexmp <- graph.formula(A:B:C:D--A:B:C:D,D-E,E-F-G-E)
Vname <- get.vertex.attribute(iDHHS,name='vertex.names', index=V(iDHHS))
V(iDHHS)$name <- Vname
V(iDHHS)$color <- coreness + 1
op <- par(mar = rep(0, 4))
plot(iDHHS,vertex.label.cex=0.8) par(op)
Vname <- get.vertex.attribute(iDHHS,name='vertex.names', index=V(iDHHS))
Vname
V(iDHHS)$name <- Vname
V(iDHHS)$color <- coreness + 1
op <- par(mar = rep(0, 4))
plot(iDHHS,vertex.label.cex=0.8) par(op)
coreness <- graph.coreness(iDHHS)
V(iDHHS)$color <- coreness + 1
op <- par(mar = rep(0, 4))
plot(iDHHS,vertex.label.cex=0.8) par(op)
Vname <- get.vertex.attribute(iDHHS,name='vertex.names', index=V(iDHHS))
Vname
V(iDHHS)$name <- Vname
coreness <- graph.coreness(iDHHS)
V(iDHHS)$color <- coreness + 1
op <- par(mar = rep(0, 4))
plot(iDHHS,vertex.label.cex=0.8) par(op)
plot(iDHHS,vertex.label.cex=0.8)
par(op)
plot(iDHHS,vertex.label.cex=0.3)
plot(iDHHS,vertex.label.cex=0.6)
V(iDHHS)$name <- coreness
V(iDHHS)$color <- colors[coreness]
colors <- rainbow(maxCoreness) op <- par(mar = rep(0, 4))
colors <- rainbow(maxCoreness)
Vname
V(iDHHS)$name <- Vname
coreness <- graph.coreness(iDHHS)
V(iDHHS)$color <- coreness + 1
op <- par(mar = rep(0, 4))
plot(iDHHS,vertex.label.cex=0.6)
par(op)
colors <- rainbow(maxCoreness)
op <- par(mar = rep(0, 4))
maxCoreness <- max(coreness)
coreness <- graph.coreness(iDHHS)
table(coreness)
maxCoreness <- max(coreness)
maxCoreness
colors <- rainbow(maxCoreness)
op <- par(mar = rep(0, 4))
plot(iDHHS,vertex.label=coreness,vertex.color=colors[coreness])
par(op)
V(iDHHS)$name <- coreness
V(iDHHS)$color <- colors[coreness]
V(iDHHS)$name <- coreness
V(iDHHS)$color <- colors[coreness]
iDHHS1_6 <- iDHHS
iDHHS2_6 <- induced.subgraph(iDHHS,vids=which(coreness > 1))
iDHHS3_6 <- induced.subgraph(iDHHS,
vids=which(coreness > 2)) iDHHS4_6 <- induced.subgraph(iDHHS,
vids=which(coreness > 3))
iDHHS2_6 <- induced.subgraph(iDHHS,vids=which(coreness > 1))
iDHHS3_6 <- induced.subgraph(iDHHS,
vids=which(coreness > 2))
iDHHS4_6 <- induced.subgraph(iDHHS,
vids=which(coreness > 3))
iDHHS4_6 <- induced.subgraph(iDHHS,
vids=which(coreness > 4))
iDHHS4_6 <- induced.subgraph(iDHHS,
vids=which(coreness > 5))
lay <- layout.fruchterman.reingold(iDHHS)
op <- par(mfrow=c(3,2),mar = c(3,0,2,0))
plot(iDHHS1_6,layout=lay,main="All k-cores")
plot(iDHHS2_6,layout=lay[which(coreness > 1),],
main="k-cores 2-6")
plot(iDHHS3_6,layout=lay[which(coreness > 2),],
main="k-cores 3-6")
plot(iDHHS4_6,layout=lay[which(coreness > 3),],
main="k-cores 4-6")
plot(iDHHS5_6,layout=lay[which(coreness > 4),],
main="k-cores 5-6")
plot(iDHHS6_6,layout=lay[which(coreness > 5),],
main="k-cores 6-6")
plot(iDHHS3_6,layout=lay[which(coreness > 2),],
main="k-cores 3-6")
plot(iDHHS4_6,layout=lay[which(coreness > 3),],
main="k-cores 4-6")
plot(iDHHS5_6,layout=lay[which(coreness > 4),],
main="k-cores 5-6")
plot(iDHHS6_6,layout=lay[which(coreness > 5),],
main="k-cores 6-6")
V(iDHHS)$name <- coreness
V(iDHHS)$color <- colors[coreness]
iDHHS1_6 <- iDHHS
iDHHS2_6 <- induced.subgraph(iDHHS,vids=which(coreness > 1))
iDHHS3_6 <- induced.subgraph(iDHHS,
vids=which(coreness > 2))
iDHHS4_6 <- induced.subgraph(iDHHS,
vids=which(coreness > 3))
iDHHS4_6 <- induced.subgraph(iDHHS,
vids=which(coreness > 4))
iDHHS4_6 <- induced.subgraph(iDHHS,
vids=which(coreness > 5))
lay <- layout.fruchterman.reingold(iDHHS)
op <- par(mfrow=c(3,2),mar = c(3,0,2,0))
plot(iDHHS1_6,layout=lay,main="All k-cores")
plot(iDHHS2_6,layout=lay[which(coreness > 1),],
main="k-cores 2-6")
plot(iDHHS3_6,layout=lay[which(coreness > 2),],
main="k-cores 3-6")
plot(iDHHS4_6,layout=lay[which(coreness > 3),],
main="k-cores 4-6")
plot(iDHHS5_6,layout=lay[which(coreness > 4),],
main="k-cores 5-6")
plot(iDHHS6_6,layout=lay[which(coreness > 5),],
main="k-cores 6-6")
V(iDHHS)$color <- colors[coreness]
iDHHS1_6 <- iDHHS
iDHHS2_6 <- induced.subgraph(iDHHS,vids=which(coreness > 1))
iDHHS3_6 <- induced.subgraph(iDHHS,
vids=which(coreness > 2))
iDHHS4_6 <- induced.subgraph(iDHHS,
vids=which(coreness > 3))
iDHHS4_6 <- induced.subgraph(iDHHS,
vids=which(coreness > 4))
iDHHS4_6 <- induced.subgraph(iDHHS,
vids=which(coreness > 5))
lay <- layout.fruchterman.reingold(iDHHS)
op <- par(mfrow=c(3,2),mar = c(3,0,2,0))
plot(iDHHS1_6,layout=lay,main="All k-cores")
plot(iDHHS2_6,layout=lay[which(coreness > 1),],
main="k-cores 2-6")
plot(iDHHS3_6,layout=lay[which(coreness > 2),],
main="k-cores 3-6")
plot(iDHHS4_6,layout=lay[which(coreness > 3),],
main="k-cores 4-6")
plot(iDHHS5_6,layout=lay[which(coreness > 4),],
main="k-cores 5-6")
iDHHS5_6 <- induced.subgraph(iDHHS,
vids=which(coreness > 4))
iDHHS6_6 <- induced.subgraph(iDHHS,
vids=which(coreness > 5))
lay <- layout.fruchterman.reingold(iDHHS)
op <- par(mfrow=c(3,2),mar = c(3,0,2,0))
plot(iDHHS1_6,layout=lay,main="All k-cores")
plot(iDHHS2_6,layout=lay[which(coreness > 1),],
main="k-cores 2-6")
plot(iDHHS3_6,layout=lay[which(coreness > 2),],
main="k-cores 3-6")
plot(iDHHS4_6,layout=lay[which(coreness > 3),],
main="k-cores 4-6")
plot(iDHHS5_6,layout=lay[which(coreness > 4),],
main="k-cores 5-6")
plot(iDHHS6_6,layout=lay[which(coreness > 5),],
main="k-cores 6-6")
lay <- layout.fruchterman.reingold(iDHHS)
g1 <- graph.formula(A-B-C-A,D-E-F-D,G-H-I-G,A-D-G-A)
V(g1)$grp_good <- c(1,1,1,2,2,2,3,3,3)
V(g1)$grp_bad <- c(1,2,3,2,3,1,3,1,2)
op <- par(mfrow=c(1,2))
plot(g1,vertex.color=(V(g1)$grp_good),
plot(g1,vertex.color=(V(g1)$grp_good),vertex.size=20,main="Good Grouping")
plot(g1,vertex.color=(V(g1)$grp_bad),
vertex.size=20,
main="Bad Grouping")
plot(g1,vertex.color=(V(g1)$grp_bad),vertex.size=20,main="Bad Grouping")
g1 <- graph.formula(A-B-C-A,D-E-F-D,G-H-I-G,A-D-G-A)
V(g1)$grp_good <- c(1,1,1,2,2,2,3,3,3)
V(g1)$grp_bad <- c(1,2,3,2,3,1,3,1,2)
op <- par(mfrow=c(1,2))
plot(g1,vertex.color=(V(g1)$grp_good),vertex.size=20,main="Good Grouping")
plot(g1,vertex.color=(V(g1)$grp_bad),vertex.size=20,main="Bad Grouping")
par(op)
g1 <- graph.formula(A-B-C-A,D-E-F-D,G-H-I-G,A-D-G-A)
V(g1)$grp_good <- c(1,1,1,2,2,2,3,3,3)
V(g1)$grp_bad <- c(1,2,3,2,3,1,3,1,2)
op <- par(mfrow=c(1,2))
plot(g1,vertex.color=(V(g1)$grp_good),vertex.size=20,main="Good Grouping")
plot(g1,vertex.color=(V(g1)$grp_bad),vertex.size=20,main="Bad Grouping")
par(op)
g1
g1 <- graph.formula(A-B-C-A,D-E-F-D,G-H-I-G,A-D-G-A)
g1
V(g1)$grp_good <- c(1,1,1,2,2,2,3,3,3)
V(g1)$grp_bad <- c(1,2,3,2,3,1,3,1,2)
g1
g1 <- graph.formula(A-B-C-A,D-E-F-D,G-H-I-G,A-D-G-A)
g1
ll<-graph.formula( A--B, C--D, E--F, G--H, I, J, K )
ll
ll<-graph.formula( A-B, C-D, E-F, G--H, I, J, K )
ll
ll<-graph.formula( A-B, C-D, E-F, G--H, I, J, K )
ll
g1 <- graph.formula(A-B-C-A,D-E-F-D,G-H-I-G,A-D-G-A)
g1
g1
op <- par(mfrow=c(1,2))
plot(g1,vertex.color=(V(g1)$grp_good),vertex.size=20,main="Good Grouping")
plot(g1,vertex.color=(V(g1)$grp_bad),vertex.size=20,main="Bad Grouping")
plot(g1,vertex.color=(V(g1)$grp_good),vertex.size=30,main="Good Grouping")
plot(g1,vertex.color=(V(g1)$grp_bad),vertex.size=30,main="Bad Grouping")
par(op)
g1 <- graph.formula(A-B-C-A,D-E-F-D,G-H-I-G,A-D-G-A)
g1
V(g1)$grp_good <- c(1,1,1,2,2,2,3,3,3)
V(g1)$grp_bad <- c(1,2,3,2,3,1,3,1,2)
g1
op <- par(mfrow=c(1,2))
plot(g1,vertex.color=(V(g1)$grp_good),vertex.size=30,main="Good Grouping")
plot(g1,vertex.color=(V(g1)$grp_bad),vertex.size=30,main="Bad Grouping")
par(op)
modularity(g1,V(g1)$grp_good)
modularity(g1,V(g1)$grp_bad)
library(intergraph)
data(DHHS)
iDHHS <- asIgraph(DHHS)
table(V(iDHHS)$agency)
data(DHHS)
iDHHS <- asIgraph(DHHS)
iDHHS
library(intergraph)
data(DHHS)
iDHHS <- asIgraph(DHHS)
iDHHS
table(V(iDHHS)$agency)
V(iDHHS)[1:10]$agency
modularity(iDHHS,(V(iDHHS)$agency+1))
data(Moreno)
iMoreno <- asIgraph(Moreno)
table(V(iMoreno)$gender)
modularity(iMoreno,V(iMoreno)$gender)
data(Facebook)
levels(factor(V(Facebook)$group))
levels(factor(V(Facebook)$group))
modularity(Facebook,grp_num)
modularity(Facebook,grp_num)
grp_num <- as.numeric(factor(V(Facebook)$group))
modularity(Facebook,grp_num)
data(Facebook)
levels(factor(V(Facebook)$group))
grp_num <- as.numeric(factor(V(Facebook)$group))
modularity(Facebook,grp_num)
